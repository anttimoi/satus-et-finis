Function GenerateWorldMap(seed)
    Randomize seed
    NotIfy("Initializing world")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If x > 2 And x < worldSize-3 And y > 2 And y < worldSize-3
                If Rand(100) < 58
                    tempMap(x,y) = 1
                Else 
                    tempMap(x,y) = 0
                EndIf 
            Else 
                tempMap(x,y) = 0
            EndIf  
        Next y
    Next x
    
    NotIfy("Creating oceans and land")
    For n = 1 To 6
        For x = 0 To worldSize-1
            For y = 0 To worldSize-1
                If y = 0 Or y = worldSize-1 Or x = 0 Or x = worldSize-1
                    tempMap(x,y) = 1
                Else
                    If tempMap(x,y) = 1
                        neighbours = 0
                        For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                            For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                                If xx = x And yy = y
                                Else
                                    If tempMap(xx,yy) = 1 Then neighbours + 1
                                EndIf 
                            Next yy
                        Next xx
                        If neighbours >= 4 Then tempMap2(x,y) = 1 Else tempMap2(x,y) = 0
                    ElseIf tempMap(x,y) = 0
                        neighbours = 0
                        For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                            For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                                If xx = x And yy = y
                                Else
                                    If tempMap(xx,yy) = 1 Then neighbours + 1
                                EndIf 
                            Next yy
                        Next xx      
                        If neighbours >= 5 Then tempMap2(x,y) = 1 Else tempMap2(x,y) = 0
                    Else
                        tempMap2(x,y) = tempMap(x,y)
                    EndIf 
                EndIf 
            Next y
        Next x
    
        For x = 0 To worldSize-1
            For y = 0 To worldSize-1
                tempMap(x,y) = tempMap2(x,y)
            Next y
        Next x
    Next n
    
    NotIfy("Making beaches")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If tempMap(x,y) = 1 
                For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                    For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                        If (xx = x And yy = y) Or Abs(x-xx)+Abs(y-yy)=2
                        Else
                            If tempMap(xx,yy) = 0 And Rand(100) > 40 Then tempMap(x,y) = 2
                        EndIf 
                    Next yy
                Next xx                
            EndIf 
        Next y 
    Next x
    
    NotIfy("Trimming beaches")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If tempMap(x,y) = 2 
                beach_found = False 
                For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                    For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                        If (xx = x And yy = y) Or Abs(x-xx)+Abs(y-yy)=2
                        Else
                            If tempMap(xx,yy) = 2 Then beach_found = True 
                        EndIf 
                    Next yy
                Next xx     
            If beach_found = False Then tempMap(x,y) = 1
            EndIf 
        Next y 
    Next x   
    
    NotIfy("Growing Forests")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            rd = Rand(-1,1)
            If tempMap(x,y) = 1
                sea_found = False 
                For r = 0 To 90
                    xr# = x
                    yr# = y
                    While Distance(x,y,xr#,yr#) < 3+rd
                        If tempMap(Int(xr#),Int(yr#)) = 0
                            sea_found = True 
                            Exit 
                        EndIf 
                        xr# = xr# + 0.5*Cos(r*4)
                        yr# = yr# + 0.5*Sin(r*4)
                    Wend
                    If sea_found = True Then Exit 
                Next r
                If sea_found = False Then tempMap(x,y) = 3
            EndIf 
        Next y 
    Next x   
    
    NotIfy("Making swamps")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If tempMap(x,y) = 1 
                For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                    For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                        If (xx = x And yy = y) Or Abs(x-xx)+Abs(y-yy)=2
                        Else
                            If tempMap(xx,yy) = 0 And Rand(100) < 30 Then tempMap(x,y) = 5
                        EndIf 
                    Next yy
                Next xx                
            EndIf 
        Next y 
    Next x
    For n = 1 To 5
        For x = 0 To worldSize-1
            For y = 0 To worldSize-1
                If tempMap(x,y) = 1 Or tempMap(x,y) = 2 
                    For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                        For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                            If (xx = x And yy = y) Or Abs(x-xx)+Abs(y-yy)=2
                            Else
                                'If tempMap(xx,yy) = 5 And Rand(100) < 5 Then tempMap(x,y) = 5
                            EndIf 
                        Next yy
                    Next xx                
                EndIf 
            Next y 
        Next x        
    Next n
    
    NotIfy("Growing hills")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If tempMap(x,y) = 3
                plainsFound = False 
                For r = 0 To 90
                    xr# = x
                    yr# = y
                    While Distance(x,y,xr#,yr#) < 3
                        If tempMap(Int(xr#),Int(yr#)) = 1
                            plainsFound = True 
                            Exit 
                        EndIf 
                        xr# = xr# + 0.5*Cos(r*4)
                        yr# = yr# + 0.5*Sin(r*4)
                    Wend
                    If plainsFound = True Then Exit 
                Next r
                If plainsFound = False Then tempMap(x,y) = 6
            EndIf 
        Next y 
    Next x   
    
    NotIfy("Smoothing hillside")
    For x = 0 To worldSize-1
        For y = 0 To worldSize-1
            If tempMap(x,y) = 3 
                For xx = Max(x-1,0) To Min(x+1,worldSize-1)
                    For yy = Max(y-1,0) To Min(y+1,worldSize-1)
                        If (xx = x And yy = y) Or Abs(x-xx)+Abs(y-yy)=2
                        Else
                            If tempMap(xx,yy) = 6 Then tempMap(x,y) = 7
                        EndIf 
                    Next yy
                Next xx                
            EndIf 
        Next y 
    Next x
    
    NotIfy("Building towns")
    town_count = 0
    While town_count <= 10
        attempts = attempts + 1
        x = Rand(worldSize-1)
        y = Rand(worldSize-1)
        If tempMap(x,y) = 1
			tempMap(x,y) = 4
			town_count = town_count + 1
        EndIf 
    Wend 
    
    NotIfy("Finishing")
    For wrsq.worldSquare = Each worldSquare
        Delete wrsq
    Next wrsq
    
    id = 0
    For y = 0 To worldSize-1
        For x = 0 To worldSize-1
            wrsq.worldSquare = New(worldSquare)
            wrsq\x = x
            wrsq\y = y
            wrsq\id = id
			wrsq\visited = False
            id = id+1
            If x = 0 or y = 0 Or x = worldSize-1 or y = worldSize-1
                'wrsq\biome = 0
            Else 
                wrsq\biome = tempMap(x,y)
            EndIf 
            If wrsq\biome = 4 Then wrsq\townName = RandomName()
            
        Next x
    Next y
    ClearText 
End Function

Function RegionCount()
	c = 0
	For wrsq.worldSquare = Each worldSquare
		If wrsq\visited = True Then c+1
	Next wrsq
	Return c
End Function

Function Travel(x,y)
	'Loading()
    For wrsq.worldSquare = Each worldSquare
        If wrsq\id = playerRegion
            current_x = wrsq\x
            current_y = wrsq\y
            Exit 
        EndIf 
    Next wrsq
    For wrsq.worldSquare = Each worldSquare
        If wrsq\x = current_x+x And wrsq\y = current_y+y 
			wrsq\visited = True
            playerRegion = wrsq\id
        EndIf 
    Next wrsq    
    UpdateLOS()
End Function

Function GetBiome(id)
    If id = 0
        Return "ocean"
    ElseIf id = 1
        Return "plains"
    ElseIf id = 2
        Return "beach"
    ElseIf id = 3
        Return "Forest"
    ElseIf id = 4
        Return "town"
    ElseIf id = 5
        Return "swamp"
    ElseIf id = 6
        Return "mountain"
    ElseIf id = 7
        Return "hillside"
    EndIf 
End Function

Function LoadBiomeImgs(n)
	For i = 0 to n
		biomeImg(i,0) = Loadimage("gfx/"+i+".png")
		If i = 3
			For x = 1 to 3
				biomeImg(i,x) = Loadimage("gfx/"+i+"_"+x+".png")
			Next x
		ElseIf i = 6
			For x = 1 to 2
				biomeImg(i,x) = Loadimage("gfx/"+i+"_"+x+".png")
			Next x			
		endIf 
	Next i
End Function

Function GetBiomeColor(id)
    If id = 0
        Color 0,0,240+Rand(-15,15)
    ElseIf id = 1
        Color 0,240+Rand(-15,15),0
    ElseIf id = 2
        Color 200+Rand(-15,15),255+Rand(-30,0),0
    ElseIf id = 3
        Color 0,Rand(125,170),0
    ElseIf id = 4
        Color 255,0,0
    ElseIf id = 5
        Color 95,125+Rand(-15,15),15
    ElseIf id = 6
        Color Rand(230,255),Rand(230,255),Rand(230,255)
    ElseIf id = 7
        Color Rand(75,125),Rand(125,170),Rand(75,125)
    EndIf     
End Function

Function UpdateLOS()
	For x = 0 to worldSize
		For y = 0 to worldSize
			If sight(x,y) = -2 Then sight(x,y) = -1
		Next y
	Next x
    For wrsq.worldSquare = Each worldSquare
        If wrsq\id = playerRegion
            x = wrsq\x
            y = wrsq\y
			sight(x,y) = -2
        EndIf
    Next wrsq
    For r = 0 To 90
		xx# = x
		yy# = y
		steps = 10
		n = 0
        While steps > 0
			xx# = Min(worldSize-1,Max(0,xx# + cos(r*4)))
			yy# = Min(worldSize-1,Max(0,yy# + sin(r*4)))
			If biome(Int(xx#),Int(yy#)) = 0
				steps = steps-1
			ElseIf biome(Int(xx#),Int(yy#)) = 1 or biome(Int(xx#),Int(yy#)) = 2 or biome(Int(xx#),Int(yy#)) = 4 or biome(Int(xx#),Int(yy#)) = 5
				steps = steps-3
			ElseIf biome(Int(xx#),Int(yy#)) = 7 or biome(Int(xx#),Int(yy#)) = 6 
				steps = steps-6
			Else 
				steps = steps-4
			endIf 
			sight(Int(xx#),Int(yy#)) = -2
			
			n = n+1
			If n > 100 Then Exit
		Wend
    Next r
End Function

Function IdToBiome(id)
	For wrsq.worldSquare = Each worldSquare
		If wrsq\id = id
			Return wrsq\biome
		endIf
	Next wrsq
End Function

Function IsSquareOnScreen(x,y)
	If (x+worldOffsetX < regionSize) and (y+worldOffsetY < regionSize) Then Return True Else Return False
End Function

Function FixOffset()
	For wrsq.worldSquare = each worldSquare
		If wrsq\id = playerRegion
			playerX = wrsq\x
			playerY = wrsq\y
		endIf
	Next wrsq
	
	If playerX+5 >= regionSize-worldOffsetX Then worldOffsetX = Max(regionSize-worldSize,worldOffsetX-1)
	If playerY+5 >= regionSize-worldOffsetY Then worldOffsetY = Max(regionSize-worldSize,worldOffsetY-1)
	If playerX-5 < -worldOffsetX Then worldOffsetX = Min(0,worldOffsetX+1)
	If playerY-5 < -worldOffsetY Then worldOffsetY = Min(0,worldOffsetY+1)
End Function

Function FogThickness(x,y,playerX,playerY)
	d = 3*Distance( x,y,playerX,playerY)
	Return Max(1,Min(70,d))
End Function